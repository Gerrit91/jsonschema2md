<% /**
 * Copyright 2017 Adobe Systems Incorporated. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 */

function createTree(schema, depth, parent){
  var lines = []
  if (schema.type==="array") {
    lines = lines.concat(createTree(schema.items, depth + 1, parent))
  } else if (schema.type==="object") {
    _.keys(schema.properties).sort().forEach(property => {
      var fully_qualified_name = parent + property
      lines.push("  ".repeat(depth) + "- [" + property + "](#" + fully_qualified_name.replace(/\./g,"") + ")")
      lines = lines.concat(createTree(schema.properties[property], depth + 1, fully_qualified_name + "."))
    })
  }
  return lines
}
%>

# Properties

<% const hasDefault = _.keys(props).filter(property => _.has(props, property + '.default')).length > 0; %>

| Property | Type | Required |<% if(hasDefault) { %> Default |<% } %> Defined by |
|----------|------|----------|<% if(hasDefault) { %>---------|<% } %>------------|
<% _.keys(props).sort().forEach(property => {
  const schema = props[property]; %>
| [<%= property %>](#<%= propertiesSlugs[property] %>) | <%= schema.simpletype %> | <%= schema.isrequired === true ? "**Required**" : "Optional" %> |<% if(hasDefault) { %> <% if (schema.default!==undefined) { %>`<%- JSON.stringify(schema.default) %>`<% } %> |<% } %> <%
    if (schema.$oSchema) { 
      %>[<%= schema.$oSchema.$linkVal %>](<%= schema.$oSchema.$linkPath %>#<%= propertiesSlugs[property] %>)<% 
    } else { 
      %><%= title %> (this schema)<% } %> |
<%
});
%><% _.keys(pprops).forEach(property => {
  const schema = pprops[property]; %>
| `<%= property.replace(':', '') %>` | <%= schema.simpletype %> | Pattern |<% if(hasDefault) { %> <% if (schema.default!==undefined) { %>`<%- JSON.stringify(schema.default) %>`<% } %> |<% } %> <%
    if (schema.$oSchema) { 
      %>[<%= schema.$oSchema.$linkVal %>](<%= schema.$oSchema.$linkPath %>#<%= property.replace(':', '').toLowerCase() %>)<% 
    } else { 
      %><%= title %> (this schema)<% } %> |
<%
});
%><% if (additional!==false||additional===undefined) { %>
| `*` | any | Additional | this schema *allows* additional properties |
<% } %>

# Property Tree

<% const tree = createTree(schema, 0, "");
  tree.forEach(line => { %>
<%= line %>
<%  }); %>
